CVS info   : $Header: /numrelcvs/HerrmannCVS/TwoPunctures/README,v 1.1 2004/08/04 13:15:01 herrmann Exp $

Original Cactus Code Thorn TwoPunctures
Thorn Author(s)     : Marcus Ansorg <marcus.ansorg@aei.mpg.de>
                    : Erik Schnetter <schnetter@aei.mpg.de>
Thorn Maintainer(s) : Marcus Ansorg <marcus.ansorg@aei.mpg.de>
                    : Erik Schnetter <schnetter@aei.mpg.de>

Modified by:
   Ian Hinder
   Shaun Wood
   Tanja Bode
   Roland Haas

--------------------------------------------------------------------------

Purpose of the thorn:

Create initial for two puncture black holes using a single domain
spectral method.  This method is described in

Marcus Ansorg, Bernd Brügmann, Wolfgang Tichy: A single-domain
spectral method for black hole puncture data, gr-qc/0404056

To do for Matter -> NonVac:

   1. Remove momentum constraint solving.
   2. Change parameters hydro_field -> get_hamiltonian_sources
   3. Create simplified functions for sources (e.g., getHamSource, getMomSource)
      -- Port all sources into a Sources.c.  Functions should only return 1 (or 3) values,
         already combining all possible applicable sources gained from aliased functions
         or functions.
      -- Sources should deal with rescalings, which are different for each source.
      -- Scalar field sources should be outsourced, returning perhaps vectors of sources with their rescalings. 
   4. Replace BY_KKxyz by Get_KK which chooses additional terms (e.g. Teukolsky wave) 
   5. Implement new momentum constraint solution.

Notes on new TwoPuncturesObject version:

TwoPuncturesObject uses object-oriented techniques for handling black holes,
TOV stars, and other objects.  It is intended to supplant TwoPuncturesNonVac as
the TP thorn that uses explicit solutions to the momentum constraint (rather
than solving it).  A sampling of practical changes from the end-user's
perspective include:
  
  * Most parameters are indexed by puncture.  That is, par_m_plus is now
    par_m[0], par_m_minus is now par_m[1]; par_P_plus[0] is now par_Px[0],
    par_P_minus[0] is now par_Px[1].
  
  * use puncture_object[0] or [1] to control what kinds of objects are on the
    grid (default: black holes).  For various reasons, single TOV stars should
    always go at puncture plus (0).  hydro_field and scalar_field currently
    have no functionality.
  
  * When TOV curvature is calculated by TPO, use minimum_dr and
    max_quadrature_error to control the behavior of the integrator.
  
  * Previous TP versions calculated u as Psi - Psi_BH.  TPO can subtract
    Psi_TOV as well if needed, guaranteeing that any stationary TOV star is
    handled the same way as a stationary BH.  Restore the old behavior with
    subtract_static_shs_solution = "no"
  
  * combination_method now defaults to a new "tp only" setting.  "matter only"
    is no longer accepted.  TPO now knows about the overall conformal factor of
    BHs+TOVs, so generally, no "combination" is actually needed.
  
  For developers:  adding your own source object can be done by inheriting from
Source class (for objects that do not go at +/- par_b, or for extended fields
like a scalar field) or by inheriting from PunctureSource, SphericalSource, or
SphericalHydroSource as appropriate to the object.  Be sure to add appropriate
handling in PSFactory (which constructs instantiated objects from the parfile)
and TPController (which provides information about psi and the overall cuvature
to the rest of the thorn).

